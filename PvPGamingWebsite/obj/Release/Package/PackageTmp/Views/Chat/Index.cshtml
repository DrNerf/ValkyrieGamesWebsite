@model PvPGamingWebsite.Models.UserProfileData
@{
    ViewBag.Title = "Chat";
    if(String.IsNullOrEmpty(Model.PictureURL))
    {
        Model.PictureURL = Url.Content("~/Images/no-avatar.jpg");
    }
}

<h2>Global chat room</h2>

@section head{
    <style>
        #discussion {
            height:500px;
            overflow:auto;
            list-style-type:none;
            /*padding-top:15px;*/
        }

        #users {
            height:500px;
            overflow:auto;
            list-style-type:none;
            background-color:white;
            padding-top:0px;
        }

        h3 {
            margin:0px;
        }

        #onlineUsers {
            list-style-type:none;
            margin-left:0px;
        }

        .userName {
            background-color:#f1f1f1;
            border-bottom:1px solid #808080;
        }

        .userName:hover {
            background-color:#dadada;
        }
        .userName img{
            width:50px;
            height:50px;
            margin-right: 5px;
        }

        #discussionContainer {
            background-color:white;
        }

        #sendForm {
            background-color:#f1f1f1;
            padding-top:15px;
        }

        #sendmessage {
            cursor:pointer;
            height:25px;
            width:30px;
        }

        #sendmessage:hover {
            color:#3a99c3;
            border:1px solid #3a99c3;
        }
    </style>
}
<div class="row">
    <div class="span4" id="users">
        <h3>Online users</h3>
        <ul id="onlineUsers">
        </ul>
    </div>
    <div class="container span7" id="discussionContainer">
        <h3>Discussion</h3>
        <ul id="discussion">
        </ul>
        <div id="sendForm">
            <div class="input-append" style="width:100%;">
                <input type="text" id="message" style="width:90%; height:25px;"/>
                <span class="add-on" id="sendmessage">
                    <i class="icon-comment"></i>
                    @*<button type="button" id="sendmessage" value="Send" class="btn btn-default">
                        <span class="icon-send"></span>
                    </button>*@
                </span>
            </div>
            <input type="hidden" id="displayname" />
        </div>
    </div>
</div>

@section scripts{
    <script>
        var $ = jQuery.noConflict();
    </script>
    <!--Script references. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="/signalr/hubs"></script>
    <!--Add script to update the page and send messages.--> 
    <script type="text/javascript">
        function S4() {
            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
        }

        $(function () {
            // Declare a proxy to reference the hub. 
            var chat = $.connection.chatHub;
            // Create a function that the hub can call to broadcast messages.
            chat.client.broadcastMessage = function (name, message, color) {
                // Html encode display name and message. 
                var encodedName = $('<div />').text(name).html();
                var encodedMsg = $('<div />').text(message).html();
                // Add the message to the page
                $('#discussion').append('<li><strong style="color:' + color + ';" >' + encodedName
                    + '</strong>:&nbsp;&nbsp;' + encodedMsg + '</li>');
                $("#discussion").scrollTop($("#discussion")[0].scrollHeight + 50);
            };

            chat.client.updateOnlineUsers = function (users) {
                users = JSON.parse(users);
                console.log(users);
                var list = $("#onlineUsers");
                list.html("");

                for (var i = 0; i < users.length; i++) {
                    list.append("<a href=/Home/ViewProfile?name=" + users[i].UserName + "><li class='userName' style='color:" + users[i].Color + ";' id='user-" + users[i].UserName + "'>"
                        + "<img onerror='brokenImageUrl();' src='" + users[i].Picture + "' >"
                        + users[i].UserName + "</li></a>");
                }
            };

            // Get the user name and store it to prepend to messages.
            $('#displayname').val("@(User.Identity.Name)");
            // Set initial focus to message input box.  
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                chat.server.onJoin($('#displayname').val(), "@(Model.Color)", "@(Model.PictureURL)");

                $('#sendmessage').click(function () {
                    var message = $('#message').val().replace(/\s/g, '');
                    if (message != "") {
                        chat.server.send($('#displayname').val(), $('#message').val(), "@(Model.Color)");
                        $('#message').val('').focus();
                    }
                });

                $(document).keydown(function (ev) {
                    var keycode = (ev.keyCode ? ev.keyCode : ev.which);
                    var message = $('#message').val().replace(/\s/g, '');
                    if (keycode == '13' && message != "") {
                        chat.server.send($('#displayname').val(), $('#message').val(), "@(Model.Color)");
                        $('#message').val('').focus();
                    }
                });

                $(window).bind('beforeunload', function (e) {
                    chat.server.onLeave($('#displayname').val());
                    var message = "Leaving chat.";
                    e.returnValue = message;
                    return message;
                });
            });
        });

        function brokenImageUrl() {
            var defaultURL = "@Url.Content("~/Images/no-avatar.jpg")";
            $(this).attr("src", defaultURL);
        }
    </script>
}